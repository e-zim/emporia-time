name: Package this version

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:

permissions:
  contents: write

jobs:
  snapshot:
    name: Save a snapshot
    if: ${{ ! startsWith(github.ref, 'refs/tags/') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v5
        with:
          go-version: '1.21.x'
      - uses: goreleaser/goreleaser-action@v5
        with:
          args: release --clean --snapshot --skip=publish
      - name: Collect the current version
        run: echo "VERSION=$(git describe --dirty --always --tags)" >> "$GITHUB_ENV"
      - name: Upload the checksums
        uses: actions/upload-artifact@v4
        with:
          name: etime_${{ env.VERSION }}_checksums.txt
          path: ./dist/etime_${{ env.VERSION }}_checksums.txt
      - uses: actions/cache/save@v3
        if: always()
        with:
          path: ./dist
          key: snapshots-${{ github.sha }}

  artifacts:
    name: Share the artifacts
    needs: snapshot
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - darwin_arm64.tar.gz
          - darwin_x86_64.tar.gz
          - linux_arm64.tar.gz
          - linux_i386.tar.gz
          - linux_x86_64.tar.gz
          - windows_arm64.zip
          - windows_i386.zip
          - windows_x86_64.zip
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache/restore@v3
        with:
          path: ./dist
          key: snapshots-${{ github.sha }}
      - uses: actions/upload-artifact@v4
        with:
          name: etime_${{ env.VERSION }}_${{ matrix.target }}
          path: ./dist/etime_${{ env.VERSION }}_${{ matrix.target }}

  release:
    name: Distribute a release
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v5
        with:
          go-version: '1.21.x'
      - uses: goreleaser/goreleaser-action@v5
        with:
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
